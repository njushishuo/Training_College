
机构的财务计算规则：
退课返还的金额： 减半 
支付结算：各机构入学收取费用之和,包括会员预订和选课，enrollrecord中会记录那些未退订和选课的收入
退课结算：各机构应返还的费用之和,包括会员退订和退课，如果退订了将会删除enrollrecord所以，如果退课会添加droprecord

即如果一个会员预订后又退订，结算时不需要考虑。
/****************************************************************************************************************/
机构设计:

a.关于开班申请和修改班级信息申请：
1.将班级理解为教学计划：课程和教师信息事先存好，新开班其实就是新建一个教学计划，设置有哪些课程，起止日期，价格
2.开办申请流程： 
	界面上新创一个班级，填写班级名称、设置最大学员数，数据库中添加一个project记录。add_status默认为pending(待审批)
	界面上继续补充班级信息，添加课程，设置起止日期，价格。
	填充完毕后，点击申请开班，new_schedule中插入相应的记录。
	审批通过后，project的add_status改为approved，将new_schedule中该pid对应的记录，复制到pre_modify_schedule中（添加操作）;
	审批否决后，project的add_status改为rejected。
3.申请修改班级信息流程:

 	只有开班申请通过的班级才可以修改

	project 相当于最新的班级基本信息存储表
	pre_modify_schedule相当于最新的班级课程安排表

	post_project用于保存修改后的班级基本信息用于总经理审批
	post_modify_schedule用于保存修改后的班级课程信息用于总经理审批
  
	可修改的信息：班级名称、开学结课日期、学费

    修改操作完成后，
    1.将当前课程情况添加到post_modify_schedule中等待总经理审批。(覆盖操作，先删除post中原有的记录，再添加记录)
    2.将当前基本信息添加到post_project中等待总经理审批。(覆盖操作，先删除post中原有的记录，再添加记录)
    目的是更新修改表，上次修改的内容将被覆盖掉。

    审批成功后
    1.project的modify_status改为approved，
    2.post_project中该pid对应的记录复制到project中（覆盖操作，先删除pre中原有的记录，再复制post记录）
    3.post_modify_schedule中该pid对应的记录复制到pre_modify_schedule中（覆盖操作，先删除pre中原有的记录，再复制post记录）
 
    审批失败后
    1.project的modify_status改为rejected

    可展示的信息：
    等待审核中： 修改前的全部信息和修改后的全部信息
    通过：只能看到修改后的信息
    拒绝：只能看到修改前的信息

    在等待审批时：展示班级信息应该从pre中读取 ， 总经理审批时从post中读取
    在审批成功后：展示还是从pre中读取
    在审批失败后：展示依然从pre中读取

/****************************************************************************************************************/
学生设计：
project的curStdCnt字段记录了所有选课学生数量
project_student只记录了会员用户

会员预订和退订：
1.会员开学前可以预订
	 只有空余的班级才可以被预定,判断余额是否足够
	（1）扣除会员卡相应金额
	（2）会增加一条预订记录，iscancled默认为0    
	（3）增加一条project_student记录
	（4）使得相应的class.CurrentStdCnt ++;
	（5）增加相应的入学记录
	全5步是事物操作
2.会员开学前可以退订
	（1）返还相应金额
	（2）相应预订记录order.isCancled 变为1; 
	（3）删除一条project_student记录
	（4）使得相应的class.CurrentStdCnt --;
	（5）删除相应的入学记录
	全5步是事物操作
3.开学后无法预订和退订

会员选课和退课：
1.开学后可以选课： 
	 对那些仍可选的班级点击选择后，判断余额是否足够
    （1）扣除会员卡相应金额,增加积分
	（2）增加一条project_student记录
	（3）使得相应的class.CurrentStdCnt ++;
	（4）增加相应的入学记录
	（5）
	全4步是事物操作
2.会员开学后可以退课：
	（1）会员卡添加相应金额
	（2）删除一条project_student记录
	（3）使得相应的class.CurrentStdCnt --;
	（4）添加相应的退学记录
	 
	
	全4步是事物操作 

线下非会员选课和退课：

1.开学后选课：（机构操作非会员选课入口）
	（1）机构收取相应金额
	（2）增加相应的入学记录
	（3）使得相应的class.CurrentStdCnt ++;
2.开学后退课：（机构操作非会员退课入口）
	（1）机构退还相应金额
	（2）增加相应的退学记录
	（3）使得相应的class.CurrentStdCnt --;

	TODO
	用户预订、入学和退课记录应该记录价格和实付金额;
	入学和退学应该记录选课方式；
	预订花销：预订记录中所有记录
	退订收款：预订记录中所有被取消的记录
	选课花销：入学记录中所有非预订的记录
	退课收入：退学记录中所有记录

/****************************************************************************************************************/
管理员设计:

结账只关心会员的结算: 
	支付结算： 每个机构当前还有没有结的账单
			   会员入学结账 可以通过 enrollment 的 isChecked的属性进行判断

	退款结算:  每个机构当前还没有结的账单
			   会员退课结账  dropRecord 的isChecked的属性进行判断



/****************************************************************************************************************/
其他设计：
e.关于自动分配识别码：

利用数据库ID即可，若要显示系统ID自动补成7位。
查询某个机构的记录时，输入id，补全后进行搜索，然后返回
插入某个机构的记录时，直接插入（要求systemid一栏符合标准）

f.会员卡

会员卡激活是从银行卡中扣除金额，当首次充值1000元以上时激活，记录日期。
会员资格暂停：激活后有效期一年，到期后，如果卡上费用不足将暂停其记录；暂停意味着不能享受积分和折扣
会员资格停止：暂停1年后未充值，会员记录停止 （删档）；
会员资格恢复：暂停后一年内再次充值，当余额达到1000元以上时恢复为激活状态。

记录上次激活的日期，每次判断已激活的账户是否该暂停；暂停的用户是否该停止，新建的用户不必考虑
用户充值后即可激活或恢复会员资格
